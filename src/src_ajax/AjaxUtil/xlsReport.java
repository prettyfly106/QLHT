/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.55
 * Generated at: 2016-03-27 11:02:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package AjaxUtil;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.zip.ZipInputStream;

import javax.servlet.*;
import javax.servlet.http.*;

import intellsoft.db.ConnectionFactory;
import intellsoft.db.DBUtil;
import intellsoft.db.RecordSet;
import com.vsc.util.*;
import com.vsc.util.DateUtil;

import java.io.*;


import report.util.ReportUtil;
import oracle.sql.BLOB;

import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.*;

import java.sql.*;
public final class xlsReport extends HttpServlet {





public void service(HttpServletRequest request, HttpServletResponse response) throws java.io.IOException, ServletException {

	HttpSession session = null;
    session = request.getSession();
    request.setCharacterEncoding("UTF-8");
  	String db_name=(String)session.getAttribute("db_name");
  	String hospitalId=request.getParameter("hospital_id");
  	String ky_gd_id=request.getParameter("kygd_id");
  	
  	try
  	{
  	 	String reportType=""+request.getParameter("cboREPORT_TYPE");
  	 	String beginDate=""+request.getParameter("txtBEGIN_DATE");
  	 	String endDate=""+request.getParameter("txtEND_DATE");
  	 	String filename = hospitalId + "_";
  	 	String submitType = request.getParameter("submit_type");
  	 	System.out.println("submitType="+submitType);
  	 	//response.setContentType("application/vnd.ms-excel; charset=utf-8");
  	 	//response.setContentType("application/vnd.openxml"); 
  	 	response.setContentType("text/html;charset=UTF-8");
  	 	//response.setHeader("Content-Disposition", "attachment; filename=" + filename + ".xlsx");
  	 	if(submitType.equalsIgnoreCase("export")){
  	 		System.out.println("1111111111111111111111111submitType="+submitType);
  	 		String sSQL="{call baocao_02.bc_benhtruyennhiem($P{loai_nsd},$P{ma_tinh},$P{dvtt},$P{tungay},$P{denngay},$P{ORACLE_REFCURSOR})}";
	  	 	if(reportType.equalsIgnoreCase("4")) {
	  	 		sSQL="{call bhxh_324.bc79a($P{dvtt},$P{tungay},$P{denngay},$P{ORACLE_REFCURSOR})}";
	  	 		filename += "bc7980a.xlsx";
	  	 	}
	  	 	else if(reportType.equalsIgnoreCase("5")) {
	  	 		sSQL="{call bhxh_324.bc80a($P{dvtt},$P{tungay},$P{denngay},$P{ORACLE_REFCURSOR})}";
	  	 		filename += "bc80a.xlsx";
	  	 	}
	  	 	else if(reportType.equalsIgnoreCase("6")) {
	  	 		sSQL="{call bhxh_324.bc_19($P{dvtt},$P{tungay},$P{denngay},$P{ORACLE_REFCURSOR})}";
	  	 		filename += "bc19.xlsx";
	  	 	}
	  	 	else if(reportType.equalsIgnoreCase("7")) {
	  	 		sSQL="{call bhxh_324.bc_20($P{dvtt},$P{tungay},$P{denngay},$P{ORACLE_REFCURSOR})}";
	  	 		filename += "bc20.xlsx";
	  	 	}
	  	 	else if(reportType.equalsIgnoreCase("8")) {
	  	 		sSQL="{call bhxh_324.bc_21($P{dvtt},$P{tungay},$P{denngay},$P{ORACLE_REFCURSOR})}";
	  	 		filename += "bc21.xlsx";
	  	 	}
	  		RecordSet rs=null;
	  		HashMap paramMap=new HashMap();
	
	  		paramMap.put("dvtt", hospitalId);
	  		paramMap.put("tungay", DateUtil.toDate(beginDate, "dd/MM/yyyy"));
	  		paramMap.put("denngay", DateUtil.toDate(endDate, "dd/MM/yyyy"));
	  		if(sSQL.indexOf("{call")==-1) { 
	  			rs = DBUtil.executeQuery(db_name, sSQL);
	  		}
	  		else {
	  			System.out.println("tu_ngay="+paramMap.get("tungay").toString());
	  			System.out.println("den_ngay="+paramMap.get("tungay").toString());
	  			rs=DBUtil.CALL_PLSQL_SP_R(db_name, sSQL, paramMap);
	  		} 
	  		Workbook wb;
	        //wb = new HSSFWorkbook();
	        wb = new XSSFWorkbook();
	        Sheet sheet = wb.createSheet("SheetData");
	        int cc=rs.getColumnCount();
	        Row newRow= sheet.createRow(0);
	        Cell newCell=null;
	        for(int i=1;i<=cc;i++) {
	          	newCell=newRow.createCell(i-1);
	          	newCell.setCellValue(rs.getColumnName(i));
	          	//System.out.println("rs.getColumnName(i)="+rs.getColumnName(i));
	        }
	        int j=1;
	        while(rs.next()) {
	  			newRow= sheet.createRow(j);
	  			j++;
	  			for(int i=1;i<=cc;i++) {
	  				newCell=newRow.createCell(i-1);
	  	        	newCell.setCellValue(rs.getString(i));
	  			}
	        }
	        rs.close();
	        System.out.println("db_name="+db_name);
  			Connection con=ConnectionFactory.getRawConnection(db_name);
  	  		BLOB blob=null;
  			blob=BLOB.createTemporary(con, true, BLOB.DURATION_SESSION);
  			OutputStream os=blob.setBinaryStream(0);
  			wb.write(os);
  			os.close();
  	  		//String file_name = hospitalId + "_" + reportType;
  	  		//String ky_gd_id = DBUtil.getOneValueString(db_name, "select ky_gd_id from pt_kygiamdinh where ky_gd_status=1  and rownum=1 and ma_cs_kcb='"+hospitalId+"'");
  	  		DBUtil.executeUpdate(db_name, "delete from pt_bhyt_filebaocao where csyt_id='"+ hospitalId + "' and kieufile_id = " + reportType);
  	  		CallableStatement ps = con.prepareCall("BEGIN insert into pt_bhyt_filebaocao(file_id,csyt_id,tenfile,loaifile,kieufile_id,ky_gd_id,ngaycn,noidungfile) values(PT_BHYT_FILEBAOCAO_SEQ.NEXTVAL,'"+hospitalId+"','"+filename+"','xslx',"+reportType+","+ky_gd_id+",sysdate,?) RETURNING FILE_ID INTO ?;END;");
  	        // size must be converted to int otherwise it results in error
  	  		ps.setBlob(1,blob);
  	        ps.registerOutParameter(2, Types.INTEGER);
  	        ps.executeUpdate();
  	        String id = ps.getString(2);
  	        con.commit();
  	        ps.close();
  	        con.close();
  	  		//wb.write(response.getOutputStream()); 
  	  		wb.close();
  	  		response.sendRedirect("/hPortal/main/manager.jsp?func=../MiniHIS/inputParams&upload=1");
  	 	}
        else{
        	String fileIDs=request.getParameter("fileIDs");
        	RecordSet rs=null;
        	rs = DBUtil.executeQuery(db_name, "select tenfile,noidungfile from pt_bhyt_filebaocao where file_id in " + fileIDs);
        	while(rs.next()) {
	            InputStream is = rs.getBinaryStream(2);
	            Workbook wb;
		        wb = new XSSFWorkbook(is);
		        response.setContentType("application/vnd.ms-excel; charset=utf-8");
		        response.setHeader("Content-Disposition", "attachment; filename=" + rs.getString(1));
				wb.write(response.getOutputStream());
				wb.close();
        	}
  	 	}
  	} catch (Exception e) {
  		e.printStackTrace();
  	} finally {
  		//if (out != null) out.close();
  	}


    
  }
}
